@page
@model LoginSystem.Pages.Exchange.CreateItemModel
@{
    ViewData["Title"] = "Tạo Mặt Hàng Trao Đổi";
}

<div class="container my-5">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-primary text-white d-flex align-items-center justify-content-between">
            <h2 class="mb-0 fs-4 fw-bold">@ViewData["Title"]</h2>
            <i class="bi bi-box-seam fs-3"></i>
        </div>
        <div class="card-body p-4">
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    @Model.ErrorMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form id="createItemForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                <!-- Hidden inputs -->
                <input type="hidden" asp-for="Item.Id" />
                <input type="hidden" asp-for="Item.OwnerId" />
                <input type="hidden" asp-for="Item.OrganizationId" value="@Model.Item.OrganizationId" />
                @if (!Model.HasOrganization)
                {
                    <input type="hidden" asp-for="Item.IsPrivate" value="false" />
                }

                <div class="row g-4">
                    <div class="col-md-6">
                        <label asp-for="Item.Title" class="form-label fw-semibold">Tiêu đề</label>
                        <input asp-for="Item.Title" class="form-control" placeholder="Nhập tiêu đề mặt hàng" required />
                        <span asp-validation-for="Item.Title" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Item.QuantityAvailable" class="form-label fw-semibold">Số lượng khả dụng</label>
                        <input asp-for="Item.QuantityAvailable" class="form-control" type="number" min="0" placeholder="Nhập số lượng" required />
                        <span asp-validation-for="Item.QuantityAvailable" class="text-danger"></span>
                    </div>
                    <div class="col-12">
                        <label asp-for="Item.Description" class="form-label fw-semibold">Mô tả</label>
                        <textarea asp-for="Item.Description" class="form-control summernote" placeholder="Mô tả chi tiết về mặt hàng" required></textarea>
                        <span asp-validation-for="Item.Description" class="text-danger"></span>
                    </div>
                    <div class="col-12">
                        <label asp-for="Item.Terms" class="form-label fw-semibold">Điều khoản trao đổi</label>
                        <textarea asp-for="Item.Terms" class="form-control" rows="4" placeholder="Nhập điều khoản trao đổi" required></textarea>
                        <span asp-validation-for="Item.Terms" class="text-danger"></span>
                    </div>
                    <div class="col-12">
                        <label asp-for="Item.PickupAddress" class="form-label fw-semibold">Địa chỉ lấy hàng</label>
                        <textarea asp-for="Item.PickupAddress" class="form-control" rows="3" placeholder="Nhập địa chỉ lấy hàng" required></textarea>
                        <span asp-validation-for="Item.PickupAddress" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Item.CategoryId" class="form-label fw-semibold">Danh mục</label>
                        <select asp-for="Item.CategoryId" class="form-select" asp-items="Model.Categories" required>
                            <option value="">Chọn danh mục</option>
                            <option value="add-new">Thêm danh mục mới</option>
                        </select>
                        <span asp-validation-for="Item.CategoryId" class="text-danger"></span>
                    </div>
                    @if (Model.HasOrganization)
                    {
                        <div class="col-md-6">
                            <label asp-for="Item.IsPrivate" class="form-label fw-semibold">Chỉ dành cho tổ chức</label>
                            <div class="form-check">
                                <input asp-for="Item.IsPrivate" class="form-check-input" type="checkbox" id="Item_IsPrivate" />
                                <label class="form-check-label" for="Item_IsPrivate">Chỉ thành viên tổ chức có thể mượn</label>
                            </div>
                            <span asp-validation-for="Item.IsPrivate" class="text-danger"></span>
                        </div>
                    }
                    <div class="col-12">
                        <label asp-for="Images" class="form-label fw-semibold">Hình ảnh <span class="text-muted">(tối đa 5, mỗi ảnh < 5MB)</span></label>
                        <input type="file" name="Images" class="form-control" accept=".jpg,.jpeg,.png" multiple data-bs-toggle="tooltip" title="Chọn tối đa 5 ảnh định dạng JPG hoặc PNG, mỗi ảnh dưới 5MB." />
                        <small class="form-text text-muted">Định dạng: JPG, PNG. Tối đa 5 ảnh.</small>
                    </div>
                    <div class="col-12">
                        <label asp-for="Video" class="form-label fw-semibold">Video <span class="text-muted">(tối đa 1, < 50MB)</span></label>
                        <input type="file" name="Video" id="videoInput" class="form-control" accept=".mp4" data-bs-toggle="tooltip" title="Chọn 1 video định dạng MP4, dưới 50MB." />
                        <small class="form-text text-muted">Định dạng: MP4. Kích thước tối đa 50MB.</small>
                        <div id="videoError" class="text-danger" style="display: none;"></div>
                    </div>
                    <div class="col-12">
                        <label asp-for="Tags" class="form-label fw-semibold">Tags <span class="text-muted">(phân cách bằng dấu phẩy)</span></label>
                        <input asp-for="Tags" class="form-control" placeholder="Ví dụ: công nghệ, điện tử, mới" data-bs-toggle="tooltip" title="Nhập các tag liên quan, cách nhau bằng dấu phẩy. Tối đa 10 tag, mỗi tag dưới 50 ký tự." />
                        <small class="form-text text-muted">Nhập các tag liên quan, cách nhau bằng dấu phẩy.</small>
                    </div>
                </div>
                <div class="d-flex justify-content-end mt-4">
                    <button type="submit" class="btn btn-primary btn-lg position-relative" id="submitButton">
                        <span class="button-text">Tạo mặt hàng</span>
                        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                    </button>
                </div>
                @Html.RenderCaptchaV2()
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Initialize Summernote
            $('.summernote').summernote({
                height: 250,
                placeholder: 'Mô tả chi tiết về mặt hàng',
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'clear']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link']],
                    ['view', ['fullscreen', 'codeview']]
                ],
                callbacks: {
                    onChange: function (contents) {
                        $('textarea[name="Item.Description"]').val(contents);
                    }
                }
            });

            // Category selection handling
            $('#Item_CategoryId').change(function () {
                if ($(this).val() === 'add-new') {
                    window.open('@Url.Page("/Exchange/AddCategory")', 'AddCategoryWindow', 'width=600,height=400');
                    $(this).val('');
                }
            });

            // Handle new category addition
            window.addEventListener('message', function (event) {
                if (event.data.type === 'categoryAdded') {
                    var newCategory = event.data.category;
                    $('#Item_CategoryId').append(
                        $('<option>', {
                            value: newCategory.id,
                            text: newCategory.name
                        })
                    );
                    $('#Item_CategoryId').val(newCategory.id);
                }
            });

            // Video file size validation
            $('#videoInput').on('change', function () {
                const maxSize = 50 * 1024 * 1024; // 50MB in bytes
                const videoError = $('#videoError');
                videoError.hide();

                if (this.files && this.files[0]) {
                    const fileSize = this.files[0].size;
                    if (fileSize > maxSize) {
                        videoError.text('Video phải nhỏ hơn 50MB.');
                        videoError.show();
                        this.value = '';
                    }
                }
            });

            // Form submission loading state
            $('#createItemForm').on('submit', function () {
                const submitButton = $('#submitButton');
                submitButton.find('.button-text').addClass('d-none');
                submitButton.find('.spinner-border').removeClass('d-none');
                submitButton.prop('disabled', true);
            });

            // Form validation
            $('#createItemForm').validate({
                errorElement: 'span',
                errorClass: 'text-danger',
                highlight: function (element) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid');
                },
                rules: {
                    'Item.Title': { required: true, maxlength: 200 },
                    'Item.Description': { required: true, maxlength: 5000 },
                    'Item.Terms': { required: true, maxlength: 1000 },
                    'Item.PickupAddress': { required: true, maxlength: 500 },
                    'Item.QuantityAvailable': { required: true, min: 0 },
                    'Item.CategoryId': { required: true },
                    'Item.OwnerId': { required: true },
                    'Item.OrganizationId': {
                        guid: true // Custom validation to ensure valid GUID or empty
                    },
                    'Images': {
                        accept: "image/jpeg,image/png",
                        filesize: 5 * 1024 * 1024
                    },
                    'Video': {
                        accept: "video/mp4",
                        filesize: 50 * 1024 * 1024
                    }
                },
                messages: {
                    'Item.Title': {
                        required: 'Tiêu đề là bắt buộc.',
                        maxlength: 'Tiêu đề không được vượt quá 200 ký tự.'
                    },
                    'Item.Description': {
                        required: 'Mô tả là bắt buộc.',
                        maxlength: 'Mô tả không được vượt quá 5000 ký tự.'
                    },
                    'Item.Terms': {
                        required: 'Điều khoản là bắt buộc.',
                        maxlength: 'Điều khoản không được vượt quá 1000 ký tự.'
                    },
                    'Item.PickupAddress': {
                        required: 'Địa chỉ lấy hàng là bắt buộc.',
                        maxlength: 'Địa chỉ không được vượt quá 500 ký tự.'
                    },
                    'Item.QuantityAvailable': {
                        required: 'Số lượng là bắt buộc.',
                        min: 'Số lượng phải lớn hơn hoặc bằng 0.'
                    },
                    'Item.CategoryId': {
                        required: 'Vui lòng chọn danh mục.'
                    },
                    'Item.OwnerId': {
                        required: 'Người sở hữu là bắt buộc.'
                    },
                    'Item.OrganizationId': {
                        guid: 'ID tổ chức không hợp lệ.'
                    },
                    'Images': {
                        accept: 'Ảnh phải là định dạng JPG hoặc PNG.',
                        filesize: 'Mỗi ảnh phải nhỏ hơn 5MB.'
                    },
                    'Video': {
                        accept: 'Video phải là định dạng MP4.',
                        filesize: 'Video phải nhỏ hơn 50MB.'
                    }
                }
            });

            // Custom jQuery validation method for file size
            $.validator.addMethod('filesize', function (value, element, param) {
                if (element.files.length === 0) return true;
                return Array.from(element.files).every(file => file.size <= param);
            }, 'Kích thước tệp vượt quá giới hạn.');

            // Custom jQuery validation method for GUID
            $.validator.addMethod('guid', function (value, element) {
                if (!value) return true; // Allow empty (null)
                return /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(value);
            }, 'ID tổ chức không hợp lệ.');
        });
    </script>
    <style>
        .card {
            transition: transform 0.2s, box-shadow 0.2s;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15) !important;
            }

        .btn-primary {
            background: linear-gradient(45deg, #0d6efd, #6610f2);
            border: none;
        }

            .btn-primary:hover {
                background: linear-gradient(45deg, #0b5ed7, #520dc2);
            }

        .summernote {
            border-radius: 0.375rem;
        }

        .note-editor.note-frame {
            border: 1px solid #ced4da !important;
            border-radius: 0.375rem;
        }
    </style>
}