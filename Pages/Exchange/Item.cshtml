@page "/Exchange/Item/{id}"
@model LoginSystem.Pages.Exchange.ItemDetailsModel
@using Microsoft.AspNetCore.Identity
@using LoginSystem.Models
@inject UserManager<ApplicationUser> UserManager

<div class="container mt-5 mb-5">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Exchange/Index">Trao đổi</a></li>
            <li class="breadcrumb-item active" aria-current="page">@(Model.Item?.Title ?? "Chi tiết mặt hàng")</li>
        </ol>
    </nav>

    <!-- Messages -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Item == null)
    {
        <div class="alert alert-warning" role="alert">
            Mặt hàng không tồn tại hoặc đã bị xóa.
        </div>
    }
    else
    {
        <h1 class="mb-4 fw-bold text-dark">@Model.Item.Title</h1>

        <div class="row g-4">
            <!-- Media Section -->
            <div class="col-lg-6">
                @if (Model.Item.MediaItems?.Any() == true)
                {
                    <div id="itemCarousel" class="carousel slide shadow-sm rounded" data-bs-ride="carousel">
                        <div class="carousel-indicators">
                            @for (int i = 0; i < Model.Item.MediaItems.Count; i++)
                            {
                                <button type="button" data-bs-target="#itemCarousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" aria-label="Slide @(i + 1)"></button>
                            }
                        </div>
                        <div class="carousel-inner">
                            @for (int i = 0; i < Model.Item.MediaItems.Count; i++)
                            {
                                var media = Model.Item.MediaItems[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    @if (media.MediaType == MediaType.Video)
                                    {
                                        <video controls class="d-block w-100 rounded" style="max-height: 400px;">
                                            <source src="@media.Url" type="video/mp4" />
                                            Trình duyệt của bạn không hỗ trợ video.
                                        </video>
                                    }
                                    else
                                    {
                                        <img src="@media.Url" class="d-block w-100 rounded" alt="@Model.Item.Title" style="max-height: 400px; object-fit: cover;" />
                                    }
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#itemCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#itemCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
                else
                {
                    <div class="text-center p-4 bg-light rounded shadow-sm">
                        <p class="text-muted">Không có hình ảnh hoặc video nào.</p>
                    </div>
                }
            </div>

            <!-- Item Info Section -->
            <div class="col-lg-6">
                <div class="card shadow-sm border-0 h-100">
                    <div class="card-body">
                        <h5 class="card-title fw-bold text-primary mb-3">Thông tin mặt hàng</h5>
                        <div class="mb-3">
                            <p class="text-muted">@Html.Raw(string.IsNullOrWhiteSpace(Model.Item.Description) ? "Không có mô tả." : Model.Item.Description)</p>
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Số lượng còn lại:</strong>
                                <span>@Model.Item.QuantityAvailable</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Danh mục:</strong>
                                <span>@(Model.Item.Category?.Name ?? "Không có")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Tags:</strong>
                                <span>@(Model.Item.Tags.Any() ? string.Join(", ", Model.Item.Tags.Select(t => t.Tag)) : "Không có")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Đánh giá trung bình:</strong>
                                <span>@(Model.AverageRating?.ToString("F1") ?? "Chưa có")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Người đăng:</strong>
                                <span>@(Model.Item.Owner?.DisplayName ?? "Không xác định")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Tổ chức:</strong>
                                <span>@(Model.OrganizationName ?? "Không có")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Ngày đăng:</strong>
                                <span>@Model.Item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between">
                                <strong>Trạng thái:</strong>
                                <span>@(Model.Item.IsPrivate ? "Riêng tư" : "Công khai")</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Terms Section -->
        <div class="card shadow-sm border-0 mt-4">
            <div class="card-body">
                <h5 class="card-title fw-bold text-primary mb-3">Điều khoản mượn</h5>
                <div>@Html.Raw(string.IsNullOrWhiteSpace(Model.Item.Terms) ? "Không có điều khoản." : Model.Item.Terms)</div>
            </div>
        </div>

        <!-- Borrow Form -->
        @if (Model.CanBorrow)
        {
            <partial name="_BorrowForm" model="Model" />
        }
        else if (Model.Item.QuantityAvailable <= 0)
        {
            <div class="alert alert-info mt-4" role="alert">
                Mặt hàng này hiện không khả dụng để mượn.
            </div>
        }
        else
        {
            <div class="alert alert-warning mt-4" role="alert">
                Bạn không có quyền mượn mặt hàng này (chỉ thành viên tổ chức được phép mượn mặt hàng riêng tư).
            </div>
        }

        <!-- Comments Section -->
        <div class="card shadow-sm border-0 mt-4">
            <div class="card-body">
                <h5 class="card-title fw-bold text-primary mb-3">Bình luận (@Model.Comments.Count)</h5>
                <form method="post" asp-page-handler="Comment" class="mb-4 needs-validation" novalidate>
                    <div class="mb-3">
                        <textarea class="form-control" name="content" rows="4" maxlength="1000" placeholder="Viết bình luận của bạn..." required></textarea>
                        <div class="invalid-feedback">Vui lòng nhập nội dung bình luận.</div>
                        <small class="form-text text-muted">Tối đa 1000 ký tự.</small>
                    </div>
                    <button type="submit" class="btn btn-primary">Gửi bình luận</button>
                </form>

                @if (!Model.Comments.Any())
                {
                    <p class="text-muted">Chưa có bình luận nào.</p>
                }
                else
                {
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="card mb-2 border-light shadow-sm">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <p class="card-text fw-bold mb-1">@(comment.User?.DisplayName ?? "Ẩn danh")</p>
                                    <small class="text-muted">@comment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                </div>
                                <p class="card-text">@comment.Content</p>
                            </div>
                        </div>
                    }
                    @if (Model.Comments.Count >= 50)
                    {
                        <p class="text-muted mt-3">Hiển thị tối đa 50 bình luận mới nhất.</p>
                    }
                }
            </div>
        </div>

        <!-- Rating Section -->
        <div class="card shadow-sm border-0 mt-4">
            <div class="card-body">
                <h5 class="card-title fw-bold text-primary mb-3">Đánh giá</h5>
                <form method="post" asp-page-handler="Rate" class="mb-4 needs-validation" novalidate>
                    <div class="mb-3">
                        <label for="score" class="form-label">Điểm (1-5):</label>
                        <input type="number" class="form-control" id="score" name="score" min="1" max="5" required />
                        <div class="invalid-feedback">Vui lòng chọn điểm từ 1 đến 5.</div>
                    </div>
                    <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
                </form>
            </div>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Bootstrap form validation
        (function () {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
    <style>
        .carousel-item img, .carousel-item video {
            border-radius: 8px;
        }

        .card {
            transition: transform 0.2s;
        }

            .card:hover {
                transform: translateY(-5px);
            }

        .list-group-item {
            background-color: transparent;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #004085;
            }
    </style>
}