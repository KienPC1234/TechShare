@page "/Exchange/Item/{id}"
@model LoginSystem.Pages.Exchange.ItemDetailsModel
@using Microsoft.AspNetCore.Identity
@using LoginSystem.Models
@inject UserManager<ApplicationUser> UserManager

<div class="container my-5">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" data-aos="fade-down">
        <ol class="breadcrumb bg-white p-3 rounded shadow-sm">
            <li class="breadcrumb-item"><a asp-page="/Exchange/Index" class="text-primary">Trao đổi</a></li>
            <li class="breadcrumb-item active" aria-current="page">@(Model.Item?.Title ?? "Chi tiết mặt hàng")</li>
        </ol>
    </nav>

    <!-- Alerts -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center" role="alert" data-aos="fade-up">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show d-flex align-items-center" role="alert" data-aos="fade-up">
            <i class="bi bi-check-circle-fill me-2"></i>
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Item == null)
    {
        <div class="alert alert-warning d-flex align-items-center" role="alert" data-aos="fade-up">
            <i class="bi bi-info-circle-fill me-2"></i>
            Mặt hàng không tồn tại hoặc đã bị xóa.
        </div>
    }
    else
    {
        <!-- Sticky Action Bar -->
        <div class="sticky-action-bar d-none d-lg-block" data-aos="fade-up">
            <div class="container">
                <div class="d-flex justify-content-end gap-3 p-3 rounded-3 shadow-sm action-bar-gradient">
                    @if (Model.CanBorrow)
                    {
                        <a href="#borrowForm" class="btn btn-primary btn-lg rounded-3"><i class="bi bi-box-arrow-down me-2"></i> Mượn ngay</a>
                    }
                    <form method="post" asp-page-handler="Report" class="report-form d-inline">
                        <input type="hidden" name="reason" value="Báo cáo từ người dùng" />
                        <button type="submit" class="btn btn-outline-danger btn-lg rounded-3 report-btn" data-title="@Model.Item.Title">
                            <span class="button-text"><i class="bi bi-flag me-2"></i> Báo cáo</span>
                            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Item Header -->
        <h1 class="mb-4 fw-bold text-dark" data-aos="fade-down">@Model.Item.Title</h1>

        <!-- Main Content -->
        <div class="row g-4">
            <!-- Media Carousel -->
            <div class="col-lg-6" data-aos="fade-right">
                @if (Model.Item.MediaItems?.Any() == true)
                {
                    <div id="itemCarousel" class="carousel slide shadow rounded-3" data-bs-ride="carousel" data-bs-interval="5000">
                        <div class="carousel-inner">
                            @for (int i = 0; i < Model.Item.MediaItems.Count; i++)
                            {
                                var media = Model.Item.MediaItems[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    @if (media.MediaType == MediaType.Video)
                                    {
                                        <video controls class="d-block w-100 rounded-3" style="max-height: 450px;">
                                            <source src="@media.Url" type="video/mp4" />
                                            Trình duyệt của bạn không hỗ trợ video.
                                        </video>
                                    }
                                    else
                                    {
                                        <a href="#" data-bs-toggle="modal" data-bs-target="#imagePreviewModal" data-image-url="@media.Url" data-image-alt="@Model.Item.Title">
                                            <img src="@media.Url" class="d-block w-100 rounded-3" alt="@Model.Item.Title" style="max-height: 450px; object-fit: cover; cursor: pointer;" />
                                        </a>
                                    }
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#itemCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#itemCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                        <div class="carousel-indicators mt-2">
                            @for (int i = 0; i < Model.Item.MediaItems.Count; i++)
                            {
                                var media = Model.Item.MediaItems[i];
                                <button type="button" data-bs-target="#itemCarousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" aria-label="Slide @(i + 1)">
                                    @if (media.MediaType == MediaType.Video)
                                    {
                                        <i class="bi bi-play-circle-fill"></i>
                                    }
                                    else
                                    {
                                        <img src="@media.Url" alt="Thumbnail @(i + 1)" style="width: 60px; height: 40px; object-fit: cover; border-radius: 4px;" />
                                    }
                                </button>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-center p-4 bg-light rounded-3 shadow" data-aos="fade-up">
                        <i class="bi bi-image display-4 text-muted mb-3"></i>
                        <p class="text-muted">Không có hình ảnh hoặc video nào.</p>
                    </div>
                }
            </div>

            <!-- Item Details -->
            <div class="col-lg-6" data-aos="fade-left">
                <div class="card shadow-sm border-0 h-100 rounded-3">
                    <div class="card-body">
                        <h5 class="fw-bold text-primary mb-3">Thông tin mặt hàng</h5>
                        <div class="mb-3 collapse-content" id="descriptionContent">
                            @Html.Raw(string.IsNullOrWhiteSpace(Model.Item.Description) ? "Không có mô tả." : Model.Item.Description)
                            <button class="btn btn-link p-0 mt-2 collapse-toggle" data-target="descriptionContent">Xem thêm</button>
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-box me-1"></i> Số lượng:</strong>
                                <span class="badge bg-primary rounded-pill">@Model.Item.QuantityAvailable</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-geo-alt me-1"></i> Địa chỉ:</strong>
                                <span>@Model.Item.PickupAddress</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-tag me-1"></i> Danh mục:</strong>
                                <span>@(Model.Item.Category?.Name ?? "Không có")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-tags me-1"></i> Tags:</strong>
                                <span>
                                    @if (Model.Item.Tags.Any())
                                    {
                                        foreach (var tag in Model.Item.Tags)
                                        {
                                            <span class="badge bg-light text-dark me-1">@tag.Tag</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>Không có</span>
                                    }
                                </span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-star me-1"></i> Đánh giá:</strong>
                                <span>
                                    @(Model.AverageRating?.ToString("F1") ?? "Chưa có")
                                    @if (Model.AverageRating.HasValue)
                                    {
                                        for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Model.AverageRating.Value)
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else if (i - 0.5 <= Model.AverageRating.Value)
                                            {
                                                <i class="bi bi-star-half text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-warning"></i>
                                            }
                                        }
                                    }
                                </span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-person me-1"></i> Người đăng:</strong>
                                <span>@(Model.Item.Owner?.DisplayName ?? "Không xác định")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-building me-1"></i> Tổ chức:</strong>
                                <span>@(Model.OrganizationName ?? "Không có")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-calendar me-1"></i> Ngày đăng:</strong>
                                <span>@Model.Item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <strong><i class="bi bi-lock me-1"></i> Trạng thái:</strong>
                                <span class="badge @(Model.Item.IsPrivate ? "bg-warning" : "bg-success")">@(Model.Item.IsPrivate ? "Riêng tư" : "Công khai")</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Terms -->
        <div class="card shadow-sm border-0 mt-4 rounded-3" data-aos="fade-up">
            <div class="card-body">
                <h5 class="fw-bold text-primary mb-3">Điều khoản mượn</h5>
                <div class="terms-content collapse-content" id="termsContent">
                    @Html.Raw(string.IsNullOrWhiteSpace(Model.Item.Terms) ? "Không có điều khoản." : Model.Item.Terms)
                    <button class="btn btn-link p-0 mt-2 collapse-toggle" data-target="termsContent">Xem thêm</button>
                </div>
            </div>
        </div>

        <!-- Borrow Form -->
        @if (Model.CanBorrow)
        {
            <div id="borrowForm" class="mt-4" data-aos="fade-up">
                <partial name="_BorrowForm" model="Model" />
            </div>
        }
        else if (Model.Item.QuantityAvailable <= 0)
        {
            <div class="alert alert-info mt-4 d-flex align-items-center" role="alert" data-aos="fade-up">
                <i class="bi bi-info-circle-fill me-2"></i>
                Mặt hàng này hiện không khả dụng để mượn.
            </div>
        }
        else
        {
            <div class="alert alert-warning mt-4 d-flex align-items-center" role="alert" data-aos="fade-up">
                <i class="bi bi-exclamation-circle-fill me-2"></i>
                Bạn không có quyền mượn mặt hàng này (chỉ thành viên tổ chức được phép mượn mặt hàng riêng tư).
            </div>
        }

        <!-- Comments -->
        <div class="card shadow-sm border-0 mt-4 rounded-3" data-aos="fade-up">
            <div class="card-body">
                <h5 class="fw-bold text-primary mb-3">Bình luận (@Model.Comments.Count)</h5>
                <form method="post" asp-page-handler="Comment" class="mb-4 needs-validation" novalidate id="commentForm">
                    <div class="mb-3 position-relative">
                        <textarea class="form-control" name="content" rows="4" maxlength="1000" placeholder="Viết bình luận của bạn..." required></textarea>
                        <div class="invalid-feedback">Vui lòng nhập nội dung bình luận.</div>
                        <small class="form-text text-muted">Tối đa 1000 ký tự.</small>
                    </div>
                    <button type="submit" class="btn btn-primary position-relative">
                        <span class="button-text">Gửi bình luận</span>
                        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                    </button>
                </form>

                @if (!Model.Comments.Any())
                {
                    <p class="text-muted">Chưa có bình luận nào.</p>
                }
                else
                {
                    var currentUser = await UserManager.GetUserAsync(User);
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="card mb-2 border-light shadow-sm" data-aos="fade-up" data-aos-delay="@(Model.Comments.IndexOf(comment) * 100)">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        <img src="@(comment.User?.AvatarUrl ?? "https://via.placeholder.com/40")" alt="@(comment.User?.DisplayName ?? "Ẩn danh") avatar" class="rounded-circle me-2 comment-avatar" style="width: 40px; height: 40px; object-fit: cover;" />
                                        <p class="fw-bold mb-1">@(comment.User?.DisplayName ?? "Ẩn danh")</p>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <small class="text-muted me-2">@comment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                        @if (currentUser != null && comment.UserId == currentUser.Id)
                                        {
                                            <form method="post" asp-page-handler="DeleteComment" class="d-inline">
                                                <input type="hidden" name="commentId" value="@comment.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Bạn có chắc muốn xóa bình luận này?');">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </div>
                                <p class="card-text">@comment.Content</p>
                            </div>
                        </div>
                    }
                    @if (Model.Comments.Count >= 50)
                    {
                        <p class="text-muted mt-3">Hiển thị tối đa 50 bình luận mới nhất.</p>
                    }
                }
            </div>
        </div>

        <!-- Rating -->
        <div class="card shadow-sm border-0 mt-4 rounded-3" data-aos="fade-up">
            <div class="card-body">
                <h5 class="fw-bold text-primary mb-3">Đánh giá</h5>
                <partial name="_RatingForm" model="Model" />
            </div>
        </div>

        <!-- Image Preview Modal -->
        <div class="modal fade" id="imagePreviewModal" tabindex="-1" aria-labelledby="imagePreviewModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl modal-dialog-centered">
                <div class="modal-content rounded-3">
                    <div class="modal-header">
                        <h5 class="modal-title" id="imagePreviewModalLabel">Xem ảnh chi tiết</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <img id="previewImage" src="" alt="" style="max-width: 100%; max-height: 70vh; object-fit: contain;" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        body {
            background-color: #f8f9fa;
        }

        .container {
            max-width: 1200px;
        }

        .sticky-action-bar {
            position: sticky;
            top: 20px;
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .action-bar-gradient {
            background: linear-gradient(45deg, #e9ecef, #ffffff);
        }

        .card {
            border-radius: 12px;
            transition: transform 0.3s, box-shadow 0.3s;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
            }

        .carousel {
            overflow: hidden;
        }

        .carousel-item img,
        .carousel-item video {
            border-radius: 12px;
            transition: transform 0.3s;
        }

            .carousel-item img:hover {
                transform: scale(1.05);
            }

        .carousel-control-prev,
        .carousel-control-next {
            width: 10%;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 12px;
        }

        .carousel-indicators {
            bottom: -50px;
        }

            .carousel-indicators button {
                width: 60px;
                height: 40px;
                margin: 0 5px;
                border: 1px solid #ddd;
                border-radius: 4px;
                background: none;
                opacity: 0.7;
            }

            .carousel-indicators .active {
                opacity: 1;
                border-color: #007bff;
            }

        .list-group-item {
            padding: 12px 0;
            border-bottom: 1px solid #e9ecef;
        }

        .btn-primary {
            background: linear-gradient(45deg, #007bff, #6610f2);
            border: none;
            border-radius: 8px;
            transition: transform 0.2s, background 0.3s;
        }

            .btn-primary:hover {
                background: linear-gradient(45deg, #0056b3, #520dc2);
                transform: scale(1.05);
            }

        .btn-outline-danger {
            border-radius: 8px;
            transition: transform 0.2s;
        }

            .btn-outline-danger:hover {
                transform: scale(1.05);
            }

        .collapse-content {
            max-height: 100px;
            overflow: hidden;
            position: relative;
            transition: max-height 0.5s ease-in-out;
        }

            .collapse-content.expanded {
                max-height: 1000px;
            }

        .collapse-toggle {
            display: none;
            color: #007bff;
            text-decoration: none;
            background: none;
            border: none;
        }

        .collapse-content.show-toggle .collapse-toggle {
            display: inline-block;
        }

        .terms-content {
            min-height: 100px;
            background: #fff;
            padding: 10px;
            border-radius: 8px;
        }

        #previewImage {
            transition: transform 0.2s;
        }

            #previewImage:hover {
                transform: scale(1.1);
            }

        .comment-avatar {
            border: 1px solid #e9ecef;
        }

        @@media (max-width: 768px) {
            .carousel-item img,
            .carousel-item video {
                max-height: 300px;
            }

            .carousel-indicators button {
                width: 40px;
                height: 30px;
            }

            .sticky-action-bar {
                position: fixed;
                bottom: 0;
                left: 0;
                right: 0;
                background: #fff;
                box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
                padding: 10px;
            }

                .sticky-action-bar .container {
                    padding: 0;
                }

                .sticky-action-bar .btn {
                    width: 100%;
                    margin-bottom: 10px;
                    font-size: 1rem;
                }

            .action-bar-gradient {
                background: linear-gradient(45deg, #ffffff, #e9ecef);
            }

            .comment-avatar {
                width: 32px;
                height: 32px;
            }
        }
    </style>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Initialize AOS with reduced motion for terms section
            AOS.init({
                duration: 800,
                once: true,
                offset: 100,
                disable: 'mobile' // Disable AOS on mobile to prevent jitter
            });

            // Form validation
            document.querySelectorAll('.needs-validation').forEach(form => {
                form.addEventListener('submit', (e) => {
                    if (!form.checkValidity()) {
                        e.preventDefault();
                        e.stopPropagation();
                    } else {
                        const btn = form.querySelector('button[type="submit"]');
                        btn.querySelector('.button-text').classList.add('d-none');
                        btn.querySelector('.spinner-border').classList.remove('d-none');
                        btn.disabled = true;
                    }
                    form.classList.add('was-validated');
                });
            });

            // Report form handling with browser confirm
            document.querySelectorAll('.report-form').forEach(form => {
                form.addEventListener('submit', (e) => {
                    e.preventDefault();
                    const btn = form.querySelector('.report-btn');
                    const title = btn.dataset.title;
                    const btnText = btn.querySelector('.button-text');
                    const spinner = btn.querySelector('.spinner-border');

                    // Show browser confirm dialog
                    const reason = prompt(`Vui lòng nhập lý do báo cáo mặt hàng "${title}":`);
                    if (reason && reason.trim()) {
                        // Set the reason in the hidden input
                        form.querySelector('input[name="reason"]').value = reason.trim();
                        // Disable button and show spinner
                        btn.disabled = true;
                        btnText.classList.add('d-none');
                        spinner.classList.remove('d-none');
                        // Submit form
                        form.submit();
                    } else if (reason !== null) {
                        alert('Lý do báo cáo không được để trống.');
                    }
                });
            });

            // Collapse content toggle
            document.querySelectorAll('.collapse-content').forEach(content => {
                const toggle = content.querySelector('.collapse-toggle');
                if (content.scrollHeight > 100) {
                    content.classList.add('show-toggle');
                }
                toggle.addEventListener('click', () => {
                    content.classList.toggle('expanded');
                    toggle.textContent = content.classList.contains('expanded') ? 'Thu gọn' : 'Xem thêm';
                });
            });

            // Smooth scroll to borrow form
            document.querySelectorAll('a[href="#borrowForm"]').forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    document.querySelector('#borrowForm').scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                });
            });

            // Image preview modal
            document.querySelectorAll('a[data-bs-target="#imagePreviewModal"]').forEach(link => {
                link.addEventListener('click', () => {
                    const url = link.dataset.imageUrl;
                    const alt = link.dataset.imageAlt;
                    document.querySelector('#previewImage').setAttribute('src', url);
                    document.querySelector('#previewImage').setAttribute('alt', alt);
                });
            });
        });
    </script>
}