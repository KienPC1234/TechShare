@page "/Exchange/EditItem/{id?}"
@model LoginSystem.Pages.Exchange.EditItemModel
@{
    ViewData["Title"] = "Chỉnh sửa Mặt Hàng Trao Đổi";
}

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">@ViewData["Title"]</h2>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @Model.ErrorMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form id="editItemForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                <!-- Hidden input for Item.Id -->
                <input type="hidden" asp-for="Item.Id" />
                <input type="hidden" asp-for="Item.OwnerId" />
                @if (!Model.HasOrganization)
                {
                    <input type="hidden" asp-for="Item.IsPrivate" value="false" />
                }
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Item.Title" class="form-label fw-bold">Tiêu đề</label>
                        <input asp-for="Item.Title" class="form-control" placeholder="Nhập tiêu đề mặt hàng" required />
                        <span asp-validation-for="Item.Title" class="text-danger"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="Item.QuantityAvailable" class="form-label fw-bold">Số lượng khả dụng</label>
                        <input asp-for="Item.QuantityAvailable" class="form-control" type="number" min="0" placeholder="Nhập số lượng" required />
                        <span asp-validation-for="Item.QuantityAvailable" class="text-danger"></span>
                    </div>
                </div>
                <div class="mb-3">
                    <label asp-for="Item.Description" class="form-label fw-bold">Mô tả</label>
                    <textarea asp-for="Item.Description" class="form-control summernote" placeholder="Mô tả chi tiết về mặt hàng" required></textarea>
                    <span asp-validation-for="Item.Description" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Item.Terms" class="form-label fw-bold">Điều khoản trao đổi</label>
                    <textarea asp-for="Item.Terms" class="form-control" rows="4" placeholder="Nhập điều khoản trao đổi" required></textarea>
                    <span asp-validation-for="Item.Terms" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Item.PickupAddress" class="form-label fw-bold">Địa chỉ lấy hàng</label>
                    <textarea asp-for="Item.PickupAddress" class="form-control" rows="3" placeholder="Nhập địa chỉ lấy hàng" required></textarea>
                    <span asp-validation-for="Item.PickupAddress" class="text-danger"></span>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="Item.CategoryId" class="form-label fw-bold">Danh mục</label>
                        <select asp-for="Item.CategoryId" class="form-select" asp-items="Model.Categories" required>
                            <option value="">Chọn danh mục</option>
                            <option value="add-new">Thêm danh mục mới</option>
                        </select>
                        <span asp-validation-for="Item.CategoryId" class="text-danger"></span>
                    </div>
                    @if (Model.HasOrganization)
                    {
                        <div class="col-md-6 mb-3">
                            <label asp-for="Item.IsPrivate" class="form-label fw-bold">Chỉ dành cho tổ chức</label>
                            <div class="form-check">
                                <input asp-for="Item.IsPrivate" class="form-check-input" type="checkbox" />
                                <label class="form-check-label" for="Item_IsPrivate">Chỉ thành viên tổ chức có thể mượn</label>
                            </div>
                        </div>
                    }
                </div>

                <!-- Display current media with delete options -->
                <div class="mb-3">
                    <label class="form-label fw-bold">Media hiện tại</label>
                    <div class="row">
                        @if (Model.Item.MediaItems?.Any() == true)
                        {
                            @foreach (var media in Model.Item.MediaItems)
                            {
                                <div class="col-md-3 mb-2">
                                    @if (media.MediaType == MediaType.Image)
                                    {
                                        <img src="@media.Url" class="img-thumbnail" style="max-width: 100px;" alt="Current Image" />
                                    }
                                    else if (media.MediaType == MediaType.Video)
                                    {
                                        <video src="@media.Url" controls class="img-thumbnail" style="max-width: 100px;"></video>
                                    }
                                    <div class="form-check">
                                        <input type="checkbox" name="DeleteMedia" value="@media.Id" class="form-check-input" id="delete_@media.Id" />
                                        <label class="form-check-label" for="delete_@media.Id">Xóa</label>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">Không có media nào.</p>
                        }
                    </div>
                </div>

                <!-- Inputs for new media -->
                <div class="mb-3">
                    <label asp-for="Images" class="form-label fw-bold">Thêm hình ảnh mới (tối đa 5, mỗi ảnh < 5MB)</label>
                    <input type="file" name="Images" class="form-control" accept=".jpg,.jpeg,.png" multiple />
                    <small class="form-text text-muted">Định dạng: JPG, PNG. Tối đa 5 ảnh.</small>
                </div>
                <div class="mb-3">
                    <label asp-for="Video" class="form-label fw-bold">Thêm video mới (tối đa 1, < 50MB)</label>
                    <input type="file" name="Video" id="videoInput" class="form-control" accept=".mp4" />
                    <small class="form-text text-muted">Định dạng: MP4. Kích thước tối đa 50MB.</small>
                    <div id="videoError" class="text-danger" style="display: none;"></div>
                </div>
                <div class="mb-3">
                    <label asp-for="Tags" class="form-label fw-bold">Tags (phân cách bằng dấu phẩy)</label>
                    <input asp-for="Tags" class="form-control" placeholder="Ví dụ: công nghệ, điện tử, mới" />
                    <small class="form-text text-muted">Nhập các tag liên quan, cách nhau bằng dấu phẩy.</small>
                </div>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary btn-lg">Lưu thay đổi</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize Summernote
            $('.summernote').summernote({
                height: 200,
                placeholder: 'Mô tả chi tiết về mặt hàng',
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'underline', 'clear']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture']],
                    ['view', ['fullscreen', 'codeview', 'help']]
                ],
                callbacks: {
                    onChange: function (contents) {
                        $('textarea[name="Item.Description"]').val(contents);
                    }
                }
            });

            // Category selection handling
            $('#Item_CategoryId').change(function () {
                if ($(this).val() === 'add-new') {
                    window.open('@Url.Page("/Exchange/AddCategory")', 'AddCategoryWindow', 'width=600,height=400');
                    $(this).val('');
                }
            });

            // Handle new category addition
            window.addEventListener('message', function (event) {
                if (event.data.type === 'categoryAdded') {
                    var newCategory = event.data.category;
                    $('#Item_CategoryId').append(
                        $('<option>', {
                            value: newCategory.id,
                            text: newCategory.name
                        })
                    );
                    $('#Item_CategoryId').val(newCategory.id);
                }
            });

            // Video file size validation
            $('#videoInput').on('change', function () {
                const maxSize = 50 * 1024 * 1024; // 50MB in bytes
                const videoError = $('#videoError');
                videoError.hide();

                if (this.files && this.files[0]) {
                    const fileSize = this.files[0].size;
                    if (fileSize > maxSize) {
                        videoError.text('Video phải nhỏ hơn 50MB.');
                        videoError.show();
                        this.value = ''; // Clear the input
                    }
                }
            });

            // Form validation
            $('#editItemForm').validate({
                errorElement: 'span',
                errorClass: 'text-danger',
                highlight: function (element) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid');
                },
                rules: {
                    'Item.Title': { required: true, maxlength: 200 },
                    'Item.Description': { required: true, maxlength: 5000 },
                    'Item.Terms': { required: true, maxlength: 1000 },
                    'Item.PickupAddress': { required: true, maxlength: 500 },
                    'Item.QuantityAvailable': { required: true, min: 0 },
                    'Item.CategoryId': { required: true },
                    'Item.OwnerId': { required: true },
                    'Images': {
                        accept: "image/jpeg,image/png",
                        filesize: 5 * 1024 * 1024 // 5MB
                    },
                    'Video': {
                        accept: "video/mp4",
                        filesize: 50 * 1024 * 1024 // 50MB
                    }
                },
                messages: {
                    'Item.Title': {
                        required: 'Tiêu đề là bắt buộc.',
                        maxlength: 'Tiêu đề không được vượt quá 200 ký tự.'
                    },
                    'Item.Description': {
                        required: 'Mô tả là bắt buộc.',
                        maxlength: 'Mô tả không được vượt quá 5000 ký tự.'
                    },
                    'Item.Terms': {
                        required: 'Điều khoản là bắt buộc.',
                        maxlength: 'Điều khoản không được vượt quá 1000 ký tự.'
                    },
                    'Item.PickupAddress': {
                        required: 'Địa chỉ lấy hàng là bắt buộc.',
                        maxlength: 'Địa chỉ không được vượt quá 500 ký tự.'
                    },
                    'Item.QuantityAvailable': {
                        required: 'Số lượng là bắt buộc.',
                        min: 'Số lượng phải lớn hơn hoặc bằng 0.'
                    },
                    'Item.CategoryId': {
                        required: 'Vui lòng chọn danh mục.'
                    },
                    'Item.OwnerId': {
                        required: 'Người sở hữu là bắt buộc.'
                    },
                    'Images': {
                        accept: 'Ảnh phải là định dạng JPG hoặc PNG.',
                        filesize: 'Mỗi ảnh phải nhỏ hơn 5MB.'
                    },
                    'Video': {
                        accept: 'Video phải là định dạng MP4.',
                        filesize: 'Video phải nhỏ hơn 50MB.'
                    }
                }
            });

            // Custom jQuery validation method for file size
            $.validator.addMethod('filesize', function (value, element, param) {
                if (element.files.length === 0) return true;
                return Array.from(element.files).every(file => file.size <= param);
            }, 'Kích thước tệp vượt quá giới hạn.');
        });
    </script>
}