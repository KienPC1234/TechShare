@page
@model LoginSystem.Pages.EditProfileModel
@{
    ViewData["Title"] = "Edit Profile";
}

<div class="container py-5">
    <h1 class="mb-4">Edit Profile</h1>

    <!-- Notifications -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form method="post" enctype="multipart/form-data" class="needs-validation" novalidate asp-antiforgery="true">
        <div class="row g-4">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-4">Personal Information</h5>

                        <div class="mb-3">
                            <label asp-for="Input.Username" class="form-label"></label>
                            <input asp-for="Input.Username" class="form-control" required />
                            <span asp-validation-for="Input.Username" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.DisplayName" class="form-label"></label>
                            <input asp-for="Input.DisplayName" class="form-control" required />
                            <span asp-validation-for="Input.DisplayName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Email" class="form-label"></label>
                            <input asp-for="Input.Email" class="form-control" required />
                            <span asp-validation-for="Input.Email" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-4">Profile Picture</h5>

                        <div class="mb-3 text-center">
                            <img id="avatarPreview" src="@(Model.CurrentUser?.AvatarUrl ?? "/images/default-avatar.png")"
                                 alt="Avatar Preview" class="img-fluid rounded-circle mb-3" style="max-width: 150px;">
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Avatar" class="form-label"></label>
                            <input asp-for="Input.Avatar" type="file" class="form-control" accept="image/jpeg,image/png"
                                   onchange="previewAvatar(event)" />
                            <small class="form-text text-muted">Max size: 2MB. Formats: JPG, PNG. Only image files are allowed.</small>
                            <span asp-validation-for="Input.Avatar" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.CurrentUser != null && !Model.CurrentUser.AdminRequestPending)
        {
            <div class="card shadow-sm mt-4">
                <div class="card-body">
                    <h5 class="card-title mb-4">Admin Request</h5>
                    <div class="mb-3">
                        <label asp-for="Input.RequestAdminReason" class="form-label">Reason for Admin Request</label>
                        <textarea asp-for="Input.RequestAdminReason" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Input.RequestAdminReason" class="text-danger"></span>
                    </div>
                    <button type="submit" asp-page-handler="RequestAdmin" class="btn btn-warning">Submit Request</button>
                </div>
            </div>
        }
        else if (Model.CurrentUser?.AdminRequestPending == true)
        {
            <div class="alert alert-info mt-4">
                <h5>Pending Admin Request</h5>
                <p>Your admin request is awaiting approval.</p>
                <p><strong>Reason:</strong> @Model.CurrentUser.AdminRequestReason</p>
            </div>
        }

        <div class="mt-4">
            <button type="submit" class="btn btn-primary me-2" id="saveButton">
                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                Save Changes
            </button>
            <a asp-page="/Index" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function previewAvatar(event) {
            const preview = document.getElementById('avatarPreview');
            const file = event.target.files[0];
            if (file) {
                // Basic client-side MIME type check
                if (!['image/jpeg', 'image/png'].includes(file.type)) {
                    alert('Only JPG or PNG files are allowed.');
                    event.target.value = '';
                    preview.src = '@(Model.CurrentUser?.AvatarUrl ?? "/images/default-avatar.png")';
                    return;
                }
                preview.src = URL.createObjectURL(file);
            }
        }

        // Bootstrap form validation
        (function () {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        // Show loading spinner on submit
        document.querySelector('form').addEventListener('submit', function(event) {
            const saveButton = document.getElementById('saveButton');
            saveButton.querySelector('.spinner-border').classList.remove('d-none');
            saveButton.disabled = true;
        });
    </script>
}