@page
@model LoginSystem.Pages.LoginModel
@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "_Layout";
}

<style>
    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    }

    .login-section {
        padding: 60px 0;
        width: 100%;
    }

    .login-container {
        background: #ffffff;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        padding: 40px;
        max-width: 500px;
        margin: 0 auto;
        animation: fadeIn 0.5s ease-out;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    h1 {
        font-weight: 600;
        color: #2c3e50;
        animation: slideIn 0.5s ease-out;
    }

    @@keyframes slideIn {
        from

    {
        transform: translateX(-20px);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }

    }

    .form-label {
        font-weight: 500;
        color: #34495e;
    }

    .form-control {
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        padding: 12px;
        padding-right: 40px; /* Space for eye icon in password field */
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.3);
            outline: none;
        }

    .btn-primary {
        background: linear-gradient(45deg, #3498db, #2980b9);
        border: none;
        border-radius: 10px;
        padding: 14px;
        font-weight: 500;
        text-transform: uppercase;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            background: linear-gradient(45deg, #2980b9, #3498db);
        }

        .btn-primary::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient( 90deg, transparent, rgba(255, 255, 255, 0.2), transparent );
            transition: 0.5s;
        }

        .btn-primary:hover::after {
            left: 100%;
        }

    .alert-danger {
        border-radius: 10px;
        background: #ffebee;
        color: #c0392b;
        font-size: 14px;
        animation: shake 0.5s;
        position: relative;
    }

        .alert-danger .btn-close {
            position: absolute;
            top: 10px;
            right: 10px;
        }

    @@keyframes shake {
        0%, 100%

    {
        transform: translateX(0);
    }

    25%, 75% {
        transform: translateX(-5px);
    }

    50% {
        transform: translateX(5px);
    }

    }

    .text-danger {
        font-size: 13px;
        margin-top: 5px;
        display: block;
    }

    .captcha-container {
        display: flex;
        justify-content: center;
        margin: 20px 0;
    }

    .password-container {
        position: relative;
    }

    .password-toggle {
        position: absolute;
        right: 12px;
        top: 70%;
        transform: translateY(-50%);
        cursor: pointer;
        color: #666;
        font-size: 16px;
        padding: 8px;
        border-radius: 50%;
        transition: all 0.3s ease;
        background: #f0f0f0;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .password-toggle:hover {
            color: #3498db;
            background: #e0e0e0;
        }

    .form-check {
        margin-bottom: 20px;
    }

    .form-check-input {
        cursor: pointer;
    }

    .forgot-password {
        color: #3498db;
        text-decoration: none;
        font-weight: 500;
        transition: color 0.3s ease;
    }

        .forgot-password:hover {
            color: #2980b9;
            text-decoration: underline;
        }

    @@media (max-width: 576px) {
        .login-container

    {
        padding: 20px;
    }

    h1 {
        font-size: 24px;
    }

    }
</style>

<section class="login-section">
    <div class="login-container">
        <h1 class="mb-5 text-center">Đăng nhập</h1>
        @if (!ModelState.IsValid)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p class="mb-0">@error.ErrorMessage</p>
                }
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <form method="post" asp-page-handler="Login" class="needs-validation" novalidate>
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Input.ReturnUrl" />
            <div class="form-group mb-4">
                <label asp-for="Input.UsernameOrEmail" class="form-label">Tên đăng nhập hoặc Email</label>
                <input asp-for="Input.UsernameOrEmail" class="form-control" placeholder="Nhập tên đăng nhập hoặc email" required />
                <span asp-validation-for="Input.UsernameOrEmail" class="text-danger"></span>
            </div>
            <div class="form-group mb-4 password-container">
                <label asp-for="Input.Password" class="form-label">Mật khẩu</label>
                <input asp-for="Input.Password" class="form-control" placeholder="Nhập mật khẩu" type="password" id="password" required minlength="6" />
                <i class="fas fa-eye password-toggle" id="togglePassword"></i>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-check mb-4">
                <input asp-for="Input.RememberMe" class="form-check-input" id="rememberMe" />
                <label asp-for="Input.RememberMe" class="form-check-label" for="rememberMe">Ghi nhớ đăng nhập</label>
            </div>
            <div class="captcha-container">
                @Html.RenderCaptchaV2()
            </div>
            <button type="submit" class="btn btn-primary w-100" id="loginButton">
                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                Đăng nhập
            </button>
        </form>
        <div class="text-center mt-4">
            <p><a asp-page="/ForgotPassword" class="forgot-password">Quên mật khẩu?</a></p>
        </div>
    </div>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Password toggle functionality
            const togglePassword = document.getElementById('togglePassword');
            const password = document.getElementById('password');

            togglePassword.addEventListener('click', function () {
                const type = password.type === 'password' ? 'text' : 'password';
                password.type = type;
                this.classList.toggle('fa-eye');
                this.classList.toggle('fa-eye-slash');
            });

            // Form validation and submit handling
            const form = document.querySelector('.needs-validation');
            form.addEventListener('submit', function (event) {
                const usernameOrEmail = form.querySelector('input[name="Input.UsernameOrEmail"]').value.trim();
                const password = form.querySelector('input[name="Input.Password"]').value;
                const submitButton = form.querySelector('#loginButton');

                if (!usernameOrEmail || !password) {
                    event.preventDefault();
                    event.stopPropagation();
                    alert('Vui lòng nhập đầy đủ tên đăng nhập/email và mật khẩu.');
                }

                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');

                if (form.checkValidity()) {
                    submitButton.querySelector('.spinner-border').classList.remove('d-none');
                    submitButton.disabled = true;
                }
            });
        });
    </script>
}